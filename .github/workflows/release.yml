name: Release to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  createrelease:
    name: Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        name: Release ${{ github.ref }}
        allowUpdates: true
        draft: false
        prerelease: false
        makeLatest: true

  publish:
    name: Build and Publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run:  twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --skip-existing dist/*

  buildwindows:
    name: Build xferx.exe
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pyinstaller

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller xferx.spec

      - name: List output folder
        run: |
          dir dist/xferx

      - name: Upload Release Asset
        id: upload-release-asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./dist/xferx/xferx.exe
